<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lcomputerManager.test.mapper.UserMapper">
	 <!-- 권한 읽기 -->
    <select id="readAuthorities" parameterType="String" resultType="org.springframework.security.core.authority.SimpleGrantedAuthority">
    	SELECT			u_auth
    	FROM				l_userauth
    	WHERE 			1=1
    	AND				u_id = #{username}
    </select>

	<!-- 회원 불러오기 -->
	<select id="readUser" parameterType="String" resultType="User">
		SELECT			u_id											as 	username,
								u_password 							as 	password,
								u_name									as	    name,
								u_phone									as		phone,
								u_isAccountNonExpired 		as 	isAccountNonExpired,
		        				u_isAccountNonLocked 		as 	isAccountNonLocked,
		        				u_isCredentialNonExpired 	as 	isCredentialsNonExpired,
		        				u_isEnabled 				as 	isEnabled
		FROM			l_userlist
		WHERE			1=1
		AND				u_id	=	#{username}
	</select>
	
     <!-- 회원 불러오기(새로고침) --> 
    <select id="readUser_refresh"  resultType="UserInfo">
    	SELECT		ta.u_id					username,
    						ta.u_name			name,
    						ta.u_phone			phone,
							tb.u_auth			auth
		FROM			l_userlist ta
		LEFT join	(
								SELECT		ta.u_id,
													GROUP_CONCAT(ta.u_auth SEPARATOR ",") u_auth
								FROM			l_userauth ta
								GROUP BY		ta.u_id
							) tb ON ta.u_id = tb.u_id
		WHERE		ta.u_id = #{username}
		    </select>
    
	<!-- 회원 등록 -->
	<insert id="createUser" parameterType="User">
		INSERT INTO l_userlist (
			u_id,
			u_password,
			u_name,
			u_phone,
			u_isAccountNonExpired,
			u_isAccountNonLocked,
			u_isCredentialNonExpired,
			u_isEnabled
		) VALUES (
			#{username},
			#{password},
			#{name},
			#{phone},
			#{isAccountNonExpired},
			#{isAccountNonLocked},
			#{isCredentialsNonExpired},
			#{isEnabled}
		)
	</insert>	
	<!-- 회원 목록 불러오기(admin) -->
    <select id="read_user_list"  resultType="UserInfo">
    	SELECT		ta.u_id					username,
    						ta.u_name			name,
    						ta.u_phone			phone,
							tb.u_auth			auth
		FROM			l_userlist ta
		LEFT join	(
								SELECT		ta.u_id,
													GROUP_CONCAT(ta.u_auth SEPARATOR ",") u_auth
								FROM			l_userauth ta
								GROUP BY		ta.u_id
							) tb ON ta.u_id = tb.u_id
		    </select>
		    
		  <!-- 학생 명단 불러오기 -->
	<select id="ReadStudentList"  resultType="Student">
    	SELECT		*
		FROM			l_studentlist
    </select>    
    <select id="ReadStudentName"  resultType="Student">
    	SELECT		s_name
		FROM			l_studentlist
    </select>    
    
    	  <!-- 출석부 불러오기 -->
	<select id="ReadAttendance"  resultType="HashMap">
    	SELECT		*
		FROM			l_attendancebook
    </select>    
    
      <!-- 학생 수강료 불러오기 -->
	<select id="ReadStudentTuition"  resultType="HashMap">
    	SELECT		*
		FROM			l_studenttuition
    </select>    
      <!-- 학생 수강료 불러오기 -->
	<select id="ReadStudentSeat"  resultType="HashMap">
    	SELECT		*
		FROM			l_studentseattable
    </select>    
		 
	 <!-- 유저 권한 추가 -->
    <insert id="createAuthority" parameterType="org.springframework.security.core.GrantedAuthority">
    	INSERT INTO l_userauth (
    		u_id,
    		u_auth
    	) VALUES
   		<foreach item="authority" index="index" collection="authorities" separator=",">
   			(#{username}, #{authority.role})
   		</foreach>
   		ON DUPLICATE KEY
			UPDATE
				u_id = #{username}
    </insert>
</mapper>